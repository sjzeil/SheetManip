plugins {
    id 'java'
    id 'ivy-publish'
    id 'project-report'
    id 'com.github.spotbugs' version '4.6.0'
    id 'jacoco'
	id 'edu.odu.cs.report_accumulator' version '1.4' 
	id 'org.hidetake.ssh' version '2.9.0' 
}

sourceCompatibility = 1.11
targetCompatibility = 1.11


dependencies {
    implementation project(':sheetManipLib')
    implementation 'org.apache.poi:poi:5.2.2'
    implementation 'org.apache.poi:poi-ooxml:5.2.2'
    implementation 'com.opencsv:opencsv:3.4+'
    implementation 'commons-cli:commons-cli:1.3.1'
    implementation 'commons-logging:commons-logging:1.2+'
	testImplementation 'org.junit.jupiter:junit-jupiter:5.7.0'
	implementation 'org.apache.logging.log4j:log4j-core:2.17.2'
}


test.ignoreFailures=true
/*
checkstyleTest.enabled = false

checkstyle {
	ignoreFailures = true
	showViolations = false
	configFile = parent.file('config/checkstyle/checkstyle.xml')
	configProperties = [ "suppressionFile" : parent.file('config/checkstyle/checkstyle.suppressions.xml')]   
}

tasks.withType(Checkstyle) {
  reports {
	html.destination project.file("build/reports/checkstyle/main.html")
  }
}
*/



spotbugsMain.ignoreFailures = true
spotbugsTest.enabled = false

check.dependsOn jacocoTestReport
check.dependsOn htmlDependencyReport

task copyWebPages (type: Copy) {
	from 'src/main/html'
	into 'build/reports'
}

task copyDocs (type: Copy) {
	from 'build/docs'
	into 'build/reports/docs'
	dependsOn 'javadoc'
}

task reports (dependsOn: ['htmlDependencyReport', 'javadoc', 'check', 
						  'copyWebPages', 'copyDocs']) {
	description 'Generate all reports for this project'
}



reportStats.reportsURL =
    'http://www.cs.odu.edu/~zeil/gitlab/SheetManip/' +
    project.name + '/reports/'

/*
deployReports.deployDestination =
	'rsync://zeil@linux.cs.odu.edu:SheetManip/' +
     project.name + '/reports/'
*/



	publishing {
			publications {
				ivyJava(IvyPublication) {
					organisation project.group
					module project.name
					revision project.version
					descriptor.status = 'integration'
					descriptor.branch = 'master'

					from project.components.java
				}
			}
			repositories {
				ivy {
					name 'ivyRepo'
					url 'sftp://linux.cs.odu.edu:22/home/zeil/secure_html/ivyrepo'
					// Readable via https://www.cs.odu.edu/~zeil/ivyrepo    
					credentials {
						// Credentials are loaded from ~/.gradle/gradle.properties
						username "$ivyRepoUser"
						password "$ivyRepoPass"
					}
				}
			}           
		}


jar {
	duplicatesStrategy 'exclude'
    manifest {
        attributes 'Implementation-Title': project.name,  
        	'Implementation-Version': project.version,
        	'Main-Class': 'edu.odu.cs.sheetManip.CSV.ExtractAsCsv'
    }
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
}

task zipWebsite (type: Zip, dependsOn: 'reportStats') {
    archiveFileName = 'website.zip'
    destinationDirectory = file('build')
    from 'build/reports'
}

remotes {
  webServer {
    host = 'linux.cs.odu.edu'
    user = "$ivyRepoUser"
    password = "$ivyRepoPass"
  }
}

task deployWebsite (dependsOn: 'zipWebsite') {
  doLast {
	def websitePath="/home/zeil/secure_html/gitlab/SheetManip/" + project.name
    ssh.run {
      session(remotes.webServer) {
       put from: "$buildDir/website.zip", into: websitePath
       execute "cd $websitePath ; unzip website.zip"
      }
    }
  }
}
